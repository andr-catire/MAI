* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --primary: #fff;
    --bg-envelope-color: #ffeaf4;
    --envelope-tab: #ffd6ec;
    --envelope-cover: #ffe0f7;
    --shadow-color: rgba(180, 160, 200, 0.18);
    --txt-color: #7a5c7b;
    --heart-color: #ffb6d5;
    --bg-color: #fbeffb;
    --accent: #b6e0fe;
    --accent2: #e0ffe6;
    --accent3: #f9e6ff;
}

body {
    /* Tailwind CSS ya maneja el font-family en el body, pero si quieres asegurarte de que esta sea la fuente principal, está bien. */
    font-family: 'Comic Neue', 'Segoe UI', Arial, sans-serif;
    /* El background ya se está aplicando en el HTML con una imagen, este background podría ser redundante. */
    /* background: linear-gradient(135deg, var(--bg-color) 0%, var(--accent) 100%); */
}

/* El .one parece ser un contenedor para el fondo del sobre. */
.one {
    background: var(--bg-color); /* Puede ser útil si la imagen de fondo tiene transparencia */
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100vh;
}

/* Background general de las secciones */
.background {
    height: 100vh;
    width: 100%;
    position: relative;
    /* Este background linear-gradient puede estar detrás de tu imagen de fondo.
       Si quieres que la imagen de fondo con opacidad sea el único fondo, podrías eliminar esto o ajustarlo. */
    background: linear-gradient(120deg, var(--bg-color) 60%, var(--accent2) 100%);
}

.background img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0.15; /* Aquí es donde la imagen se ve tenue */
    filter: blur(2px);
}

.container {
    height: 100%;
    width: 100%;
    top: 0;
    display: grid;
    position: absolute;
    place-items: center;
}

.container > .envelope-wrapper {
    background: var(--bg-envelope-color);
    box-shadow: 0 0 40px var(--shadow-color);
    border-radius: 24px;
    position: relative;
    z-index: 10;
    border: 2px solid var(--envelope-tab);
}

.envelope-wrapper > .envelope {
    position: relative;
    width: 500px;
    height: 240px;
}

.envelope-wrapper > .envelope::before {
    content: "";
    position: absolute;
    top: 0;
    z-index: 2;
    border-top: 150px solid var(--envelope-tab);
    border-right: 250px solid transparent;
    border-left: 250px solid transparent;
    border-radius: 16px 16px 0 0;
    transform-origin: top;
    transition: all 0.5s ease-in-out 0.7s;
}

.envelope-wrapper > .envelope::after {
    content: "";
    position: absolute;
    z-index: 2;
    width: 0px;
    height: 0px;
    border-top: 150px solid transparent;
    border-right: 250px solid var(--envelope-cover);
    border-bottom: 100px solid var(--envelope-cover);
    border-left: 250px solid var(--envelope-cover);
    border-radius: 0 0 24px 24px;
}

.envelope > .letter {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 82%;
    height: auto;
    max-height: 98%;
    background: var(--primary);
    text-align: center;
    transition: all 1s cubic-bezier(.77,0,.18,1);
    box-shadow: 0 0 10px var(--shadow-color);
    padding: 22px 18px;
    overflow-y: auto;
    bottom: 0;
    border-radius: 16px;
    border: 1.5px solid var(--accent3);
}

.envelope > .letter > .text {
    font-family: 'Comic Neue', cursive, sans-serif; /* Asegura esta fuente para el texto */
    color: var(--txt-color);
    text-align: left;
    font-size: 14px;
    line-height: 1.7;
}

.heart {
    position: absolute;
    top: 51%;
    left: 50%;
    width: 34px;
    height: 34px;
    background: var(--heart-color);
    z-index: 4;
    transform: translate(-50%, -20%) rotate(45deg);
    transition: transform 0.5s cubic-bezier(.77,0,.18,1) 1s;
    box-shadow: 0 2px 8px var(--shadow-color);
    cursor: pointer;
    border: 2px solid #fff0fa;
}

.heart:before,
.heart:after {
    content: "";
    position: absolute;
    width: 34px;
    height: 34px;
    background-color: var(--heart-color);
    border-radius: 50%;
}

.heart:before {
    top: -17px;
}

.heart:after {
    left: 17px;
}

/* Clases para abrir el sobre */
.flap > .envelope::before {
    transform: rotateX(180deg);
    z-index: 0; /* Asegura que la parte superior del sobre se vaya hacia atrás */
}

.flap > .envelope > .letter {
    bottom: calc(100% + 24px); /* Sube la carta por encima del sobre */
    transform: translateX(-50%) scale(1.03);
    transition-delay: 1s;
}

.flap > .heart {
    transform: translate(-50%, -20%) rotate(90deg); /* Animación del corazón */
    transition-delay: 0.4s;
}

.love {
    text-align: center;
    font-weight: bold;
    color: #e48ccf;
    letter-spacing: 1px;
    font-size: 1.1rem;
}

.pana {
    width: 100%;
    margin-top: .3rem;
}

.pana img {
    width: 1.5rem;
    margin: auto;
}

/* REVISIÓN DE LOS ESTILOS DE LOS GIFS EN LAS VENTANAS */
/* Originalmente tenías un selector #window #gif img, pero en el HTML que me diste,
   los GIFs están directamente dentro de #window con clases 'absolute'.
   Vamos a ajustar esto para que los estilos de opacidad y tamaño al hacer hover
   se apliquen a los GIFs de forma individual si lo deseas, o si hay un contenedor para ellos.
   Si quieres que los GIFs solo aparezcan cuando se hace hover sobre #window,
   la estructura HTML debe ser:
   <div id="window">
       <div class="gifs-container">
           <img ...>
           <img ...>
           ...
       </div>
   </div>
   Y luego aplicar el CSS al 'gifs-container'.

   Si los quieres siempre visibles y solo quieres la animación del tamaño,
   entonces la opacidad inicial debería ser 1, y solo cambiar el width.
   Por ahora, ajusto la regla para que afecte a todas las imágenes dentro de #window
   que sean hijos directos del contenedor de GIFs si existiera, o a las imágenes directas.
   Considerando tu HTML, los GIFs tienen clases 'absolute' directamente, así que
   esta regla es la que los afecta.
*/
.absolute img { /* Esto podría afectar a CUALQUIER imagen con clase 'absolute' */
    opacity: 1; /* Por defecto visibles, si quieres que no lo estén al inicio, cámbialo a 0 */
    transition: opacity .3s, width .3s;
    /* width: 5rem; */ /* Tailwind ya te está dando un width, esto podría sobrescribirlo */
}

/* Si quieres que los GIFs se agranden al pasar el ratón sobre la ventana */
#window:hover .absolute img { /* Aplicar a los GIFs dentro de la ventana al hacer hover en la ventana */
    /* opacity: 1; */ /* Si ya están visibles, no necesitas esto */
    /* width: 11rem; */ /* Esto sobrescribiría Tailwind, usa clases de Tailwind o ¡important si es necesario */
}


/* Reproductor de música */
.music-container {
    /* La posición fija y z-index ya están en Tailwind, pero si necesitas anularlos, está bien. */
    /* position: fixed; */
    /* bottom: 24px; */
    /* left: 24px; */
    width: 450px; /* Define el ancho del contenedor del reproductor */
    z-index: 100; /* Asegura que esté por encima de casi todo */
    background: linear-gradient(90deg, #ffeaf4 60%, #e0ffe6 100%);
    border-radius: 18px;
    box-shadow: 0 4px 24px var(--shadow-color);
    border: 2px solid #ffd6ec;
    transition: all 0.75s cubic-bezier(0.075, 0.82, 0.165, 1);
    /* Estas propiedades ya las manejas con Tailwind en el HTML:
       .music-container relative bg-neutral-100 py-3 px-3 border-2 z-10 rounded-md border-black flex items-center
       Asegúrate de que no haya conflicto con los colores de fondo y bordes.
    */
}

.player {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    width: 100%;
    height: 70px;
    position: relative;
    /* Esto podría estar causando que el player no se vea como esperas.
       Si Tailwind ya lo está configurando como flex y align-items, etc.,
       este CSS podría ser redundante o generar conflictos. */
}

.track-info {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    transition: all .25s ease;
    pointer-events: none;
    /* Esto es importante si quieres que el texto no sea interactuable */
}

.trackname {
    font-size: 1.5rem;
    font-weight: bold;
    color: #e48ccf;
    text-shadow: 0 1px 4px #fff3fa;
}

.trackartist {
    font-size: .9rem;
    color: #b48ccf;
}

.track-nav {
    gap: .5rem;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    transition: all .25s ease;
}

/* Clases para el reproductor minimizado */
.music-container.hide {
    width: 140px; /* Ancho cuando está escondido */
}

.music-container.hide .track-info,
.music-container.hide .track-nav {
    transition: all 0s ease;
    opacity: 0;
    pointer-events: none;
}

.toggle-player {
    position: absolute;
    right: -1rem; /* Mueve el botón fuera del contenedor */
    top: -1rem;
    width: 2rem;
    z-index: 102; /* Más alto que el music-container */
    border-radius: 100%;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #ffeaf4;
    border: 1.5px solid #ffd6ec;
    box-shadow: 0 2px 8px var(--shadow-color);
}

.sound-bars-lottie {
    position: absolute;
    top: 50%;
    left: 0.5rem;
    transform: translateY(-50%);
    z-index: 1; /* Asegura que esté detrás de la info del track si lo deseas */
}

.sound-bars {
    width: 60px;
    height: 60px;
}

.prev-track,
.playpause-track,
.next-track {
    cursor: pointer;
    z-index: 101; /* Asegura que los botones sean clickeables */
    border-radius: 100%;
    padding: .3rem;
    background: #fff0fa;
    border: 1.5px solid #ffd6ec;
    transition: background 0.2s;
}

.prev-track:hover,
.playpause-track:hover,
.next-track:hover {
    background-color: #ffe0f7;
    transition-duration: .1s;
}

/* Clase para la animación de Lottie cuando la música está pausada */
.paused .sound-bars-lottie {
    opacity: 0;
    transition: opacity 0.5s ease;
}
